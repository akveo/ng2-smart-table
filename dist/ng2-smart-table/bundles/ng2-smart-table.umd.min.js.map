{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ng2-smart-table/lib/lib/helpers.ts","ng://ng2-smart-table/lib/lib/data-set/cell.ts","ng://ng2-smart-table/lib/lib/data-set/row.ts","ng://ng2-smart-table/lib/lib/data-set/column.ts","ng://ng2-smart-table/lib/lib/data-set/data-set.ts","ng://ng2-smart-table/lib/lib/grid.ts","ng://ng2-smart-table/lib/components/cell/cell.component.ts","ng://ng2-smart-table/lib/components/cell/cell-edit-mode/edit-cell-default.ts","ng://ng2-smart-table/lib/components/cell/cell-edit-mode/custom-edit.component.ts","ng://ng2-smart-table/lib/components/cell/cell-edit-mode/default-edit.component.ts","ng://ng2-smart-table/lib/components/cell/cell-edit-mode/edit-cell.component.ts","ng://ng2-smart-table/lib/components/cell/cell-editors/default-editor.ts","ng://ng2-smart-table/lib/components/cell/cell-editors/checkbox-editor.component.ts","ng://ng2-smart-table/lib/components/cell/cell-editors/completer-editor.component.ts","ng://ng2-smart-table/lib/components/cell/cell-editors/input-editor.component.ts","ng://ng2-smart-table/lib/components/cell/cell-editors/select-editor.component.ts","ng://ng2-smart-table/lib/components/cell/cell-editors/textarea-editor.component.ts","ng://ng2-smart-table/lib/components/cell/cell-view-mode/custom-view.component.ts","ng://ng2-smart-table/lib/components/cell/cell-view-mode/view-cell.component.ts","ng://ng2-smart-table/lib/components/cell/cell.module.ts","ng://ng2-smart-table/lib/lib/data-source/data-source.ts","ng://ng2-smart-table/lib/components/filter/filter-default.ts","ng://ng2-smart-table/lib/components/filter/filter.component.ts","ng://ng2-smart-table/lib/components/filter/default-filter.component.ts","ng://ng2-smart-table/lib/components/filter/custom-filter.component.ts","ng://ng2-smart-table/lib/components/filter/filter-types/default-filter.ts","ng://ng2-smart-table/lib/components/filter/filter-types/checkbox-filter.component.ts","ng://ng2-smart-table/lib/components/filter/filter-types/completer-filter.component.ts","ng://ng2-smart-table/lib/components/filter/filter-types/input-filter.component.ts","ng://ng2-smart-table/lib/components/filter/filter-types/select-filter.component.ts","ng://ng2-smart-table/lib/components/filter/filter.module.ts","ng://ng2-smart-table/lib/components/pager/pager.component.ts","ng://ng2-smart-table/lib/components/pager/pager.module.ts","ng://ng2-smart-table/lib/components/tbody/tbody.component.ts","ng://ng2-smart-table/lib/components/tbody/cells/create-cancel.component.ts","ng://ng2-smart-table/lib/components/tbody/cells/edit-delete.component.ts","ng://ng2-smart-table/lib/components/tbody/cells/custom.component.ts","ng://ng2-smart-table/lib/components/tbody/tbody.module.ts","ng://ng2-smart-table/lib/components/thead/thead.component.ts","ng://ng2-smart-table/lib/components/thead/cells/actions.component.ts","ng://ng2-smart-table/lib/components/thead/cells/actions-title.component.ts","ng://ng2-smart-table/lib/components/thead/cells/add-button.component.ts","ng://ng2-smart-table/lib/components/thead/cells/checkbox-select-all.component.ts","ng://ng2-smart-table/lib/components/thead/cells/column-title.component.ts","ng://ng2-smart-table/lib/components/thead/cells/title/title.component.ts","ng://ng2-smart-table/lib/components/thead/rows/thead-filters-row.component.ts","ng://ng2-smart-table/lib/components/thead/rows/thead-form-row.component.ts","ng://ng2-smart-table/lib/components/thead/rows/thead-titles-row.component.ts","ng://ng2-smart-table/lib/components/thead/thead.module.ts","ng://ng2-smart-table/lib/lib/data-source/local/local.sorter.ts","ng://ng2-smart-table/lib/lib/data-source/local/local.filter.ts","ng://ng2-smart-table/lib/lib/data-source/local/local.pager.ts","ng://ng2-smart-table/lib/lib/data-source/local/local.data-source.ts","ng://ng2-smart-table/lib/ng2-smart-table.component.ts","ng://ng2-smart-table/lib/ng2-smart-table.module.ts","ng://ng2-smart-table/lib/lib/data-source/server/server-source.conf.ts","ng://ng2-smart-table/lib/lib/data-source/server/server.data-source.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","__spread","concat","deepExtend","objects","_i","val","src","slice","forEach","obj","isArray","keys","cloneDeep","Deferred","_this","promise","Promise","resolve","reject","getDeepFromObject","object","name","defaultValue","split","level","k","prepareValue","Cell","row","column","dataSet","newValue","getColumn","getRow","getValue","getValuePrepareFunction","Function","PREPARE","getData","setValue","getId","id","getTitle","title","isEditable","index","isAddable","Row","data","_dataSet","isSelected","isInEditing","cells","process","getCell","find","el","getCells","getIsSelected","getNewData","values","assign","cell","setData","getColumns","createCell","defValue","settings","Column","type","class","width","isSortable","isFilterable","sortDirection","defaultSortDirection","editor","config","component","filter","renderComponent","getOnComponentInitFunction","onComponentInitFunction","getCompareFunction","compareFunction","valuePrepareFunction","getFilterFunction","filterFunction","getConfig","getFilterType","getFilterConfig","prepareType","indexOf","prepareSortDirection","determineType","DataSet","columnSettings","columns","rows","willSelect","createColumns","createNewRow","createRows","getRows","getFirstRow","getLastRow","findRowByData","deselectAll","selectRow","previousIsSelected","selectedRow","multipleSelectRow","selectPreviousRow","selectFirstRow","selectLastRow","willSelectFirstRow","willSelectLastRow","select","newRow","Grid","source","createFormShown","onSelectRowSource","Subject","setSettings","setSource","showActionColumn","position","isCurrentActionsPosition","isActionsVisible","getSetting","isMultiSelectVisible","getNewRow","refresh","getDataSet","prepareSource","onChanged","subscribe","changes","processDataChange","onUpdated","onSelectRow","asObservable","edit","confirmEmitter","deferred","then","newData","skipAdd","prepend","catch","err","emit","confirm","save","skipEdit","update","delete","remove","shouldProcessChange","determineRowToSelect","initialSource","getInitialSort","setSort","setPaging","sortConf","getSelectedRows","selectAllRows","status","CellComponent","inputClass","mode","edited","EventEmitter","onEdited","event","isNew","grid","createConfirm","editConfirm","tslib_1.__decorate","Input","Output","Component","selector","template","EditCellDefault","onStopEditing","onClick","stopPropagation","CustomEditComponent","resolver","_super","tslib_1.__extends","ngOnChanges","customComponent","componentFactory","resolveComponentFactory","dynamicTarget","createComponent","instance","ngOnDestroy","destroy","ViewChild","read","ViewContainerRef","static","ComponentFactoryResolver","DefaultEditComponent","getEditorType","EditCellComponent","DefaultEditor","CheckboxEditorComponent","onChange","trueVal","true","falseVal","false","checked","CompleterEditorComponent","completerService","completerStr","ngOnInit","completer","dataService","local","searchFields","titleField","descriptionField","onEditedCompleter","CompleterService","InputEditorComponent","SelectEditorComponent","TextareaEditorComponent","CustomViewComponent","createCustomComponent","callOnComponentInit","patchInstance","getPatch","rowData","ViewCellComponent","changeDetection","ChangeDetectionStrategy","OnPush","CELL_COMPONENTS","CellModule","NgModule","imports","CommonModule","FormsModule","Ng2CompleterModule","declarations","exports","DataSource","onChangedSource","onAddedSource","onUpdatedSource","onRemovedSource","emitOnChanged","load","onAdded","onRemoved","element","emitOnAdded","append","add","emitOnRemoved","emitOnUpdated","empty","conf","doEmit","setFilter","andOperator","addFilter","fieldConf","page","perPage","setPage","action","getElements","elements","paging","getPaging","getFilter","sort","getSort","FilterDefault","query","onFilter","field","search","FilterComponent","apply","firstChange","dataChangedSub","unsubscribe","dataChanges","filterConf","filters","v","DefaultFilterComponent","CustomFilterComponent","DefaultFilter","delay","changesSubscription","CheckboxFilterComponent","filterActive","inputControl","FormControl","valueChanges","pipe","debounceTime","resetFilter","preventDefault","emitEvent","CompleterFilterComponent","completerContent","map","ev","distinctUntilChanged","inputTextChanged","InputFilterComponent","SelectFilterComponent","skip","NgControl","FILTER_COMPONENTS","FilterModule","ReactiveFormsModule","PagerComponent","perPageSelect","changePage","count","currentPerPage","isPageOutOfBounce","processPageChange","initPages","getLast","shouldShow","paginate","getPage","prev","getPages","pages","Math","ceil","pagesCount","showPagesCount","middleOne","lastOne","floor","onChangePerPage","toLowerCase","PagerModule","Ng2SmartTableTbodyComponent","cancel","custom","userSelectRow","editRowSelect","rowHover","actionColumns","isActionAdd","isActionEdit","isActionDelete","showActionColumnLeft","editInputClass","showActionColumnRight","noDataMessage","TbodyCreateCancelComponent","onSave","onCancelEdit","saveButtonContent","cancelButtonContent","TbodyEditDeleteComponent","onEdit","onDelete","deleteConfirm","editRowButtonContent","deleteRowButtonContent","TbodyCustomComponent","onCustom","TBODY_COMPONENTS","TBodyModule","Ng2SmartTableTheadComponent","onSortTable","isHideHeader","isHideSubHeader","ActionsComponent","createButtonContent","ActionsTitleComponent","ref","ngAfterViewInit","nativeElement","classList","actionsColumnTitle","ElementRef","AddButtonComponent","addNewButtonContent","onAdd","CheckboxSelectAllComponent","ColumnTitleComponent","TitleComponent","currentDirection","_sort","changeSortDirection","direction","compare","newDirection","TheadFitlersRowComponent","filterInputClass","TheadFormRowComponent","onCreate","addInputClass","TheadTitlesRowComponent","THEAD_COMPONENTS","THeadModule","compareValues","a","LocalSorter","customCompare","dir","filterValues","toString","includes","LocalFilter","customFilter","LocalPager","LocalDataSource","filteredAndSorted","pagingConf","reset","unshift","found","Error","prepareData","getFilteredAndSorted","getAll","silent","currentFieldConf","mergedData_1","elem","pos","arr","Ng2SmartTableComponent","rowSelect","userRowSelect","defaultSettings","selectMode","hideHeader","hideSubHeader","actions","columnTitle","editButtonContent","confirmSave","addButtonContent","confirmCreate","deleteButtonContent","confirmDelete","attr","pager","display","rowClassFunction","isAllSelected","prepareSettings","initGrid","tableId","tableClass","isPagerDisplay","onMultipleSelectRow","onUserSelectRow","emitUserSelectRow","emitSelectRow","onRowHover","onSelectAllRows","$event","resetAllSelector","selectedRows","selected","Ng2SmartTableModule","ServerSourceConf","_a","_b","_c","endPoint","_d","sortFieldKey","_e","sortDirKey","_f","pagerPageKey","_g","pagerLimitKey","_h","filterFieldKey","_j","totalKey","_k","dataKey","SORT_FIELD_KEY","SORT_DIR_KEY","PAGER_PAGE_KEY","PAGER_LIMIT_KEY","FILTER_FIELD_KEY","TOTAL_KEY","DATA_KEY","ServerDataSource","http","lastRequestCount","requestElements","res","extractTotalFromResponse","extractDataFromResponse","toPromise","rawData","body","headers","has","get","httpParams","createRequesParams","params","observe","HttpParams","addSortRequestParams","addFilterRequestParams","addPagerRequestParams","set","toUpperCase","replace"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { cloneDeep } from 'lodash';\r\n\r\n/**\r\n * Extending object that entered in first argument.\r\n *\r\n * Returns extended object or false if have no target object or incorrect type.\r\n *\r\n * If you wish to clone source object (without modify it), just use empty new\r\n * object as first argument, like this:\r\n *   deepExtend({}, yourObj_1, [yourObj_N]);\r\n */\r\nexport const deepExtend = function(...objects: Array<any>): any {\r\n  if (arguments.length < 1 || typeof arguments[0] !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  if (arguments.length < 2) {\r\n    return arguments[0];\r\n  }\r\n\r\n  const target = arguments[0];\r\n\r\n  // convert arguments to array and cut off target object\r\n  const args = Array.prototype.slice.call(arguments, 1);\r\n\r\n  let val, src;\r\n\r\n  args.forEach((obj: any) => {\r\n    // skip argument if it is array or isn't object\r\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\r\n      return;\r\n    }\r\n\r\n    Object.keys(obj).forEach(function (key) {\r\n      src = target[key]; // source value\r\n      val = obj[key]; // new value\r\n\r\n      // recursion prevention\r\n      if (val === target) {\r\n        return;\r\n\r\n        /**\r\n         * if new value isn't object then just overwrite by new value\r\n         * instead of extending.\r\n         */\r\n      } else if (typeof val !== 'object' || val === null) {\r\n        target[key] = val;\r\n        return;\r\n\r\n        // just clone arrays (and recursive clone objects inside)\r\n      } else if (Array.isArray(val)) {\r\n        target[key] = cloneDeep(val);\r\n        return;\r\n\r\n        // overwrite by new value if source isn't object or array\r\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\r\n        target[key] = deepExtend({}, val);\r\n        return;\r\n\r\n        // source value and new value is objects both, extending...\r\n      } else {\r\n        target[key] = deepExtend(src, val);\r\n        return;\r\n      }\r\n    });\r\n  });\r\n\r\n  return target;\r\n};\r\n\r\nexport class Deferred {\r\n\r\n  promise: Promise<any>;\r\n\r\n  resolve: any;\r\n  reject: any;\r\n\r\n  constructor() {\r\n    this.promise = new Promise((resolve, reject) => {\r\n      this.resolve = resolve;\r\n      this.reject = reject;\r\n    });\r\n  }\r\n}\r\n\r\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\r\nexport function getDeepFromObject(object = {}, name: string, defaultValue?: any) {\r\n  const keys = name.split('.');\r\n  // clone the object\r\n  let level = deepExtend({}, object);\r\n  keys.forEach((k) => {\r\n    if (level && typeof level[k] !== 'undefined') {\r\n      level = level[k];\r\n    }\r\n  });\r\n\r\n  return typeof level === 'undefined' ? defaultValue : level;\r\n}\r\n","import { Column } from './column';\r\nimport { DataSet } from './data-set';\r\nimport { Row } from './row';\r\n\r\nexport function prepareValue (value: any) { return value }\r\n\r\nexport class Cell {\r\n\r\n  newValue: any = '';\r\n  protected static PREPARE = prepareValue;\r\n\r\n  constructor(protected value: any, protected row: Row, protected column: any, protected dataSet: DataSet) {\r\n    this.newValue = value;\r\n  }\r\n\r\n  getColumn(): Column {\r\n    return this.column;\r\n  }\r\n\r\n  getRow(): Row {\r\n    return this.row;\r\n  }\r\n\r\n  getValue(): any {\r\n    const valid = this.column.getValuePrepareFunction() instanceof Function;\r\n    const prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;\r\n    return prepare.call(null, this.value, this.row.getData(), this);\r\n  }\r\n\r\n  setValue(value: any): any {\r\n    this.newValue = value;\r\n  }\r\n\r\n  getId(): string {\r\n    return this.getColumn().id;\r\n  }\r\n\r\n  getTitle(): string {\r\n    return this.getColumn().title;\r\n  }\r\n\r\n  isEditable(): boolean {\r\n    if (this.getRow().index === -1) {\r\n      return this.getColumn().isAddable;\r\n    }\r\n    else {\r\n      return this.getColumn().isEditable;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Cell } from './cell';\r\nimport { Column } from './column';\r\nimport { DataSet } from './data-set';\r\n\r\nexport class Row {\r\n\r\n  isSelected: boolean = false;\r\n  isInEditing: boolean = false;\r\n  cells: Array<Cell> = [];\r\n\r\n\r\n  constructor(public index: number, protected data: any, protected _dataSet: DataSet) {\r\n    this.process();\r\n  }\r\n\r\n  getCell(column: Column): Cell {\r\n    return this.cells.find(el => el.getColumn() === column);\r\n  }\r\n\r\n  getCells() {\r\n    return this.cells;\r\n  }\r\n\r\n  getData(): any {\r\n    return this.data;\r\n  }\r\n\r\n  getIsSelected(): boolean {\r\n    return this.isSelected;\r\n  }\r\n\r\n  getNewData(): any {\r\n    const values = Object.assign({}, this.data);\r\n    this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\r\n    return values;\r\n  }\r\n\r\n  setData(data: any): any {\r\n    this.data = data;\r\n    this.process();\r\n  }\r\n\r\n  process() {\r\n    this.cells = [];\r\n    this._dataSet.getColumns().forEach((column: Column) => {\r\n      const cell = this.createCell(column);\r\n      this.cells.push(cell);\r\n    });\r\n  }\r\n\r\n  createCell(column: Column): Cell {\r\n    const defValue = (column as any).settings.defaultValue ? (column as any).settings.defaultValue : '';\r\n    const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\r\n    return new Cell(value, this, column, this._dataSet);\r\n  }\r\n}\r\n","import { DataSet } from './data-set';\r\n\r\nexport class Column {\r\n\r\n  title: string = '';\r\n  type: string = '';\r\n  class: string = '';\r\n  width: string = '';\r\n  isSortable: boolean = false;\r\n  isEditable: boolean = true;\r\n  isAddable: boolean = true;\r\n  isFilterable: boolean = false;\r\n  sortDirection: string = '';\r\n  defaultSortDirection: string = '';\r\n  editor: { type: string, config: any, component: any } = { type: '', config: {}, component: null };\r\n  filter: { type: string, config: any, component: any } = { type: '', config: {}, component: null };\r\n  renderComponent: any = null;\r\n  compareFunction: Function;\r\n  valuePrepareFunction: Function;\r\n  filterFunction: Function;\r\n  onComponentInitFunction: Function;\r\n\r\n  constructor(public id: string, protected settings: any, protected dataSet: DataSet) {\r\n    this.process();\r\n  }\r\n\r\n  getOnComponentInitFunction(): Function {\r\n    return this.onComponentInitFunction;\r\n  }\r\n\r\n  getCompareFunction(): Function {\r\n    return this.compareFunction;\r\n  }\r\n\r\n  getValuePrepareFunction(): Function {\r\n    return this.valuePrepareFunction;\r\n  }\r\n\r\n  getFilterFunction(): Function {\r\n    return this.filterFunction;\r\n  }\r\n\r\n  getConfig(): any {\r\n    return this.editor && this.editor.config;\r\n  }\r\n\r\n  getFilterType(): any {\r\n    return this.filter && this.filter.type;\r\n  }\r\n\r\n  getFilterConfig(): any {\r\n    return this.filter && this.filter.config;\r\n  }\r\n\r\n  protected process() {\r\n    this.title = this.settings['title'];\r\n    this.class = this.settings['class'];\r\n    this.width = this.settings['width'];\r\n    this.type = this.prepareType();\r\n    this.editor = this.settings['editor'];\r\n    this.filter = this.settings['filter'];\r\n    this.renderComponent = this.settings['renderComponent'];\r\n\r\n    this.isFilterable = typeof this.settings['filter'] === 'undefined' ? true : !!this.settings['filter'];\r\n    this.defaultSortDirection = ['asc', 'desc']\r\n      .indexOf(this.settings['sortDirection']) !== -1 ? this.settings['sortDirection'] : '';\r\n    this.isSortable = typeof this.settings['sort'] === 'undefined' ? true : !!this.settings['sort'];\r\n    this.isEditable = typeof this.settings['editable'] === 'undefined' ? true : !!this.settings['editable'];\r\n    this.isAddable=typeof this.settings['addable'] === 'undefined' ? true : !!this.settings['addable'];\r\n    this.sortDirection = this.prepareSortDirection();\r\n\r\n    this.compareFunction = this.settings['compareFunction'];\r\n    this.valuePrepareFunction = this.settings['valuePrepareFunction'];\r\n    this.filterFunction = this.settings['filterFunction'];\r\n    this.onComponentInitFunction = this.settings['onComponentInitFunction'];\r\n  }\r\n\r\n  prepareType(): string {\r\n    return this.settings['type'] || this.determineType();\r\n  }\r\n\r\n  prepareSortDirection(): string {\r\n    return this.settings['sort'] === 'desc' ? 'desc' : 'asc';\r\n  }\r\n\r\n  determineType(): string {\r\n    // TODO: determine type by data\r\n    return 'text';\r\n  }\r\n}\r\n","import { Row } from './row';\r\nimport { Column } from './column';\r\n\r\nexport class DataSet {\r\n\r\n  newRow: Row;\r\n\r\n  protected data: Array<any> = [];\r\n  protected columns: Array<Column> = [];\r\n  protected rows: Array<Row> = [];\r\n  protected selectedRow: Row;\r\n  protected willSelect: string = 'first';\r\n\r\n  constructor(data: Array<any> = [], protected columnSettings: Object) {\r\n    this.createColumns(columnSettings);\r\n    this.setData(data);\r\n\r\n    this.createNewRow();\r\n  }\r\n\r\n  setData(data: Array<any>) {\r\n    this.data = data;\r\n    this.createRows();\r\n  }\r\n\r\n  getColumns(): Array<Column> {\r\n    return this.columns;\r\n  }\r\n\r\n  getRows(): Array<Row> {\r\n    return this.rows;\r\n  }\r\n\r\n  getFirstRow(): Row {\r\n    return this.rows[0];\r\n  }\r\n\r\n  getLastRow(): Row {\r\n    return this.rows[this.rows.length - 1];\r\n  }\r\n\r\n  findRowByData(data: any): Row {\r\n    return this.rows.find((row: Row) => row.getData() === data);\r\n  }\r\n\r\n  deselectAll() {\r\n    this.rows.forEach((row) => {\r\n      row.isSelected = false;\r\n    });\r\n  }\r\n\r\n  selectRow(row: Row): Row {\r\n    const previousIsSelected = row.isSelected;\r\n    this.deselectAll();\r\n\r\n    row.isSelected = !previousIsSelected;\r\n    this.selectedRow = row;\r\n\r\n    return this.selectedRow;\r\n  }\r\n\r\n  multipleSelectRow(row: Row): Row {\r\n    row.isSelected = !row.isSelected;\r\n    this.selectedRow = row;\r\n\r\n    return this.selectedRow;\r\n  }\r\n\r\n  selectPreviousRow(): Row {\r\n    if (this.rows.length > 0) {\r\n      let index = this.selectedRow ? this.selectedRow.index : 0;\r\n      if (index > this.rows.length - 1) {\r\n        index = this.rows.length - 1;\r\n      }\r\n      this.selectRow(this.rows[index]);\r\n      return this.selectedRow;\r\n    }\r\n  }\r\n\r\n  selectFirstRow(): Row {\r\n    if (this.rows.length > 0) {\r\n      this.selectRow(this.rows[0]);\r\n      return this.selectedRow;\r\n    }\r\n  }\r\n\r\n  selectLastRow(): Row {\r\n    if (this.rows.length > 0) {\r\n      this.selectRow(this.rows[this.rows.length - 1]);\r\n      return this.selectedRow;\r\n    }\r\n  }\r\n\r\n  willSelectFirstRow() {\r\n    this.willSelect = 'first';\r\n  }\r\n\r\n  willSelectLastRow() {\r\n    this.willSelect = 'last';\r\n  }\r\n\r\n  select(): Row {\r\n    if (this.getRows().length === 0) {\r\n      return;\r\n    }\r\n    if (this.willSelect) {\r\n      if (this.willSelect === 'first') {\r\n        this.selectFirstRow();\r\n      }\r\n      if (this.willSelect === 'last') {\r\n        this.selectLastRow();\r\n      }\r\n      this.willSelect = '';\r\n    } else {\r\n      this.selectFirstRow();\r\n    }\r\n\r\n    return this.selectedRow;\r\n  }\r\n\r\n  createNewRow() {\r\n    this.newRow = new Row(-1, {}, this);\r\n    this.newRow.isInEditing = true;\r\n  }\r\n\r\n  /**\r\n   * Create columns by mapping from the settings\r\n   * @param settings\r\n   * @private\r\n   */\r\n  createColumns(settings: any) {\r\n    for (const id in settings) {\r\n      if (settings.hasOwnProperty(id)) {\r\n        this.columns.push(new Column(id, settings[id], this));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create rows based on current data prepared in data source\r\n   * @private\r\n   */\r\n  createRows() {\r\n    this.rows = [];\r\n    this.data.forEach((el, index) => {\r\n      this.rows.push(new Row(index, el, this));\r\n    });\r\n  }\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nimport { Deferred, getDeepFromObject } from './helpers';\r\nimport { Column } from './data-set/column';\r\nimport { Row } from './data-set/row';\r\nimport { DataSet } from './data-set/data-set';\r\nimport { DataSource } from './data-source/data-source';\r\n\r\nexport class Grid {\r\n\r\n  createFormShown: boolean = false;\r\n\r\n  source: DataSource;\r\n  settings: any;\r\n  dataSet: DataSet;\r\n\r\n  onSelectRowSource = new Subject<any>();\r\n\r\n  constructor(source: DataSource, settings: any) {\r\n    this.setSettings(settings);\r\n    this.setSource(source);\r\n  }\r\n\r\n  showActionColumn(position: string): boolean {\r\n    return this.isCurrentActionsPosition(position) && this.isActionsVisible();\r\n  }\r\n\r\n  isCurrentActionsPosition(position: string): boolean {\r\n    return position == this.getSetting('actions.position');\r\n  }\r\n\r\n  isActionsVisible(): boolean {\r\n    return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\r\n  }\r\n\r\n  isMultiSelectVisible(): boolean {\r\n    return this.getSetting('selectMode') === 'multi';\r\n  }\r\n\r\n  getNewRow(): Row {\r\n    return this.dataSet.newRow;\r\n  }\r\n\r\n  setSettings(settings: Object) {\r\n    this.settings = settings;\r\n    this.dataSet = new DataSet([], this.getSetting('columns'));\r\n\r\n    if (this.source) {\r\n      this.source.refresh();\r\n    }\r\n  }\r\n\r\n  getDataSet(): DataSet {\r\n    return this.dataSet;\r\n  }\r\n\r\n  setSource(source: DataSource) {\r\n    this.source = this.prepareSource(source);\r\n\r\n    this.source.onChanged().subscribe((changes: any) => this.processDataChange(changes));\r\n\r\n    this.source.onUpdated().subscribe((data: any) => {\r\n      const changedRow = this.dataSet.findRowByData(data);\r\n      changedRow.setData(data);\r\n    });\r\n  }\r\n\r\n  getSetting(name: string, defaultValue?: any): any {\r\n    return getDeepFromObject(this.settings, name, defaultValue);\r\n  }\r\n\r\n  getColumns(): Array<Column> {\r\n    return this.dataSet.getColumns();\r\n  }\r\n\r\n  getRows(): Array<Row> {\r\n    return this.dataSet.getRows();\r\n  }\r\n\r\n  selectRow(row: Row) {\r\n    this.dataSet.selectRow(row);\r\n  }\r\n\r\n  multipleSelectRow(row: Row) {\r\n    this.dataSet.multipleSelectRow(row);\r\n  }\r\n\r\n  onSelectRow(): Observable<any> {\r\n    return this.onSelectRowSource.asObservable();\r\n  }\r\n\r\n  edit(row: Row) {\r\n    row.isInEditing = true;\r\n  }\r\n\r\n  create(row: Row, confirmEmitter: EventEmitter<any>) {\r\n\r\n    const deferred = new Deferred();\r\n    deferred.promise.then((newData) => {\r\n      newData = newData ? newData : row.getNewData();\r\n      if (deferred.resolve.skipAdd) {\r\n        this.createFormShown = false;\r\n      } else {\r\n        this.source.prepend(newData).then(() => {\r\n          this.createFormShown = false;\r\n          this.dataSet.createNewRow();\r\n        });\r\n      }\r\n    }).catch((err) => {\r\n      // doing nothing\r\n    });\r\n\r\n    if (this.getSetting('add.confirmCreate')) {\r\n      confirmEmitter.emit({\r\n        newData: row.getNewData(),\r\n        source: this.source,\r\n        confirm: deferred,\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n  }\r\n\r\n  save(row: Row, confirmEmitter: EventEmitter<any>) {\r\n\r\n    const deferred = new Deferred();\r\n    deferred.promise.then((newData) => {\r\n      newData = newData ? newData : row.getNewData();\r\n      if (deferred.resolve.skipEdit) {\r\n        row.isInEditing = false;\r\n      } else {\r\n        this.source.update(row.getData(), newData).then(() => {\r\n          row.isInEditing = false;\r\n        });\r\n      }\r\n    }).catch((err) => {\r\n      // doing nothing\r\n    });\r\n\r\n    if (this.getSetting('edit.confirmSave')) {\r\n      confirmEmitter.emit({\r\n        data: row.getData(),\r\n        newData: row.getNewData(),\r\n        source: this.source,\r\n        confirm: deferred,\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n  }\r\n\r\n  delete(row: Row, confirmEmitter: EventEmitter<any>) {\r\n\r\n    const deferred = new Deferred();\r\n    deferred.promise.then(() => {\r\n      this.source.remove(row.getData());\r\n    }).catch((err) => {\r\n      // doing nothing\r\n    });\r\n\r\n    if (this.getSetting('delete.confirmDelete')) {\r\n      confirmEmitter.emit({\r\n        data: row.getData(),\r\n        source: this.source,\r\n        confirm: deferred,\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n  }\r\n\r\n  processDataChange(changes: any) {\r\n    if (this.shouldProcessChange(changes)) {\r\n      this.dataSet.setData(changes['elements']);\r\n      if (this.getSetting('selectMode') !== 'multi') {\r\n        const row = this.determineRowToSelect(changes);\r\n\r\n        if (row) {\r\n          this.onSelectRowSource.next(row);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldProcessChange(changes: any): boolean {\r\n    if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes['action']) !== -1) {\r\n      return true;\r\n    } else if (['prepend', 'append'].indexOf(changes['action']) !== -1 && !this.getSetting('pager.display')) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // TODO: move to selectable? Separate directive\r\n  determineRowToSelect(changes: any): Row {\r\n\r\n    if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes['action']) !== -1) {\r\n      return this.dataSet.select();\r\n    }\r\n    if (changes['action'] === 'remove') {\r\n      if (changes['elements'].length === 0) {\r\n        // we have to store which one to select as the data will be reloaded\r\n        this.dataSet.willSelectLastRow();\r\n      } else {\r\n        return this.dataSet.selectPreviousRow();\r\n      }\r\n    }\r\n    if (changes['action'] === 'append') {\r\n      // we have to store which one to select as the data will be reloaded\r\n      this.dataSet.willSelectLastRow();\r\n    }\r\n    if (changes['action'] === 'add') {\r\n      return this.dataSet.selectFirstRow();\r\n    }\r\n    if (changes['action'] === 'update') {\r\n      return this.dataSet.selectFirstRow();\r\n    }\r\n    if (changes['action'] === 'prepend') {\r\n      // we have to store which one to select as the data will be reloaded\r\n      this.dataSet.willSelectFirstRow();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  prepareSource(source: any): DataSource {\r\n    const initialSource: any = this.getInitialSort();\r\n    if (initialSource && initialSource['field'] && initialSource['direction']) {\r\n      source.setSort([initialSource], false);\r\n    }\r\n    if (this.getSetting('pager.display') === true) {\r\n      source.setPaging(1, this.getSetting('pager.perPage'), false);\r\n    }\r\n\r\n    source.refresh();\r\n    return source;\r\n  }\r\n\r\n  getInitialSort() {\r\n    const sortConf: any = {};\r\n    this.getColumns().forEach((column: Column) => {\r\n      if (column.isSortable && column.defaultSortDirection) {\r\n        sortConf['field'] = column.id;\r\n        sortConf['direction'] = column.defaultSortDirection;\r\n        sortConf['compare'] = column.getCompareFunction();\r\n      }\r\n    });\r\n    return sortConf;\r\n  }\r\n\r\n  getSelectedRows(): Array<any> {\r\n    return this.dataSet.getRows()\r\n      .filter(r => r.isSelected);\r\n  }\r\n\r\n  selectAllRows(status: any) {\r\n    this.dataSet.getRows()\r\n      .forEach(r => r.isSelected = status);\r\n  }\r\n\r\n  getFirstRow(): Row {\r\n    return this.dataSet.getFirstRow();\r\n  }\r\n\r\n  getLastRow(): Row {\r\n    return this.dataSet.getLastRow();\r\n  }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Grid } from '../../lib/grid';\r\nimport { Cell } from '../../lib/data-set/cell';\r\nimport { Row } from '../../lib/data-set/row';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-cell',\r\n  template: `\r\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\r\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\r\n                          [inputClass]=\"inputClass\"\r\n                          (edited)=\"onEdited($event)\">\r\n    </table-cell-edit-mode>\r\n  `,\r\n})\r\nexport class CellComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n  @Input() createConfirm: EventEmitter<any>;\r\n  @Input() isNew: boolean;\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string = '';\r\n  @Input() mode: string = 'inline';\r\n  @Input() isInEditing: boolean = false;\r\n\r\n  @Output() edited = new EventEmitter<any>();\r\n\r\n  onEdited(event: any) {\r\n    if (this.isNew) {\r\n      this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n    } else {\r\n      this.grid.save(this.row, this.editConfirm);\r\n    }\r\n  }\r\n}\r\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\nexport class EditCellDefault {\r\n\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string = '';\r\n\r\n  @Output() edited = new EventEmitter<any>();\r\n\r\n  onEdited(event: any): boolean {\r\n    this.edited.next(event);\r\n    return false;\r\n  }\r\n\r\n  onStopEditing(): boolean {\r\n    this.cell.getRow().isInEditing = false;\r\n    return false;\r\n  }\r\n\r\n  onClick(event: any) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  OnDestroy,\r\n} from '@angular/core';\r\n\r\nimport { EditCellDefault } from './edit-cell-default';\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-custom-editor',\r\n  template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n})\r\nexport class CustomEditComponent extends EditCellDefault implements OnChanges, OnDestroy {\r\n\r\n  customComponent: any;\r\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget: any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.cell && !this.customComponent) {\r\n      const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\r\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n\r\n      // set @Inputs and @Outputs of custom component\r\n      this.customComponent.instance.cell = this.cell;\r\n      this.customComponent.instance.inputClass = this.inputClass;\r\n      this.customComponent.instance.onStopEditing.subscribe(() => this.onStopEditing());\r\n      this.customComponent.instance.onEdited.subscribe((event: any) => this.onEdited(event));\r\n      this.customComponent.instance.onClick.subscribe((event: any) => this.onClick(event));\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.customComponent) {\r\n      this.customComponent.destroy();\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { EditCellDefault } from './edit-cell-default';\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-default-editor',\r\n  templateUrl: './default-edit.component.html',\r\n})\r\nexport class DefaultEditComponent extends EditCellDefault {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getEditorType(): string {\r\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-edit-mode',\r\n  template: `\r\n      <div [ngSwitch]=\"getEditorType()\">\r\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"onEdited($event)\">\r\n        </table-cell-custom-editor>\r\n        <table-cell-default-editor *ngSwitchDefault\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"onEdited($event)\">\r\n        </table-cell-default-editor>\r\n      </div>\r\n    `,\r\n})\r\nexport class EditCellComponent {\r\n\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string = '';\r\n\r\n  @Output() edited = new EventEmitter<any>();\r\n\r\n  onEdited(event: any): boolean {\r\n    this.edited.next(event);\r\n    return false;\r\n  }\r\n\r\n  getEditorType(): string {\r\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\r\n  }\r\n}\r\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\nexport class DefaultEditor implements Editor {\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string;\r\n\r\n  @Output() onStopEditing = new EventEmitter<any>();\r\n  @Output() onEdited = new EventEmitter<any>();\r\n  @Output() onClick = new EventEmitter<any>();\r\n}\r\n\r\nexport interface Editor {\r\n  cell: Cell;\r\n  inputClass: string;\r\n  onStopEditing: EventEmitter<any>;\r\n  onEdited: EventEmitter<any>;\r\n  onClick: EventEmitter<any>;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'checkbox-editor',\r\n  styleUrls: ['./editor.component.scss'],\r\n  template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           type=\"checkbox\"\r\n           class=\"form-control\"\r\n           [name]=\"cell.getId()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (change)=\"onChange($event)\">\r\n    `,\r\n})\r\nexport class CheckboxEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  onChange(event: any) {\r\n    const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\r\n    const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\r\n    this.cell.newValue = event.target.checked ? trueVal : falseVal;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CompleterService } from 'ng2-completer';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'completer-editor',\r\n  template: `\r\n    <ng2-completer [(ngModel)]=\"completerStr\"\r\n                   [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\r\n                   [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\r\n                   [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"onEditedCompleter($event)\">\r\n    </ng2-completer>\r\n    `,\r\n})\r\nexport class CompleterEditorComponent extends DefaultEditor implements OnInit {\r\n\r\n  completerStr: string = '';\r\n\r\n  constructor(private completerService: CompleterService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\r\n      const config = this.cell.getColumn().getConfig().completer;\r\n      config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n      config.dataService.descriptionField(config.descriptionField);\r\n    }\r\n  }\r\n\r\n  onEditedCompleter(event: { title: '' }): boolean {\r\n    this.cell.newValue = event.title;\r\n    return false;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'input-editor',\r\n  styleUrls: ['./editor.component.scss'],\r\n  template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           class=\"form-control\"\r\n           [(ngModel)]=\"cell.newValue\"\r\n           [name]=\"cell.getId()\"\r\n           [placeholder]=\"cell.getTitle()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (keydown.enter)=\"onEdited.emit($event)\"\r\n           (keydown.esc)=\"onStopEditing.emit()\">\r\n    `,\r\n})\r\nexport class InputEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'select-editor',\r\n  template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"cell.newValue\"\r\n            [name]=\"cell.getId()\"\r\n            [disabled]=\"!cell.isEditable()\"\r\n            (click)=\"onClick.emit($event)\"\r\n            (keydown.enter)=\"onEdited.emit($event)\"\r\n            (keydown.esc)=\"onStopEditing.emit()\">\r\n\r\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\r\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\r\n        </option>\r\n    </select>\r\n    `,\r\n})\r\nexport class SelectEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'textarea-editor',\r\n  styleUrls: ['./editor.component.scss'],\r\n  template: `\r\n    <textarea [ngClass]=\"inputClass\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"cell.newValue\"\r\n              [name]=\"cell.getId()\"\r\n              [disabled]=\"!cell.isEditable()\"\r\n              [placeholder]=\"cell.getTitle()\"\r\n              (click)=\"onClick.emit($event)\"\r\n              (keydown.enter)=\"onEdited.emit($event)\"\r\n              (keydown.esc)=\"onStopEditing.emit()\">\r\n    </textarea>\r\n    `,\r\n})\r\nexport class TextareaEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ComponentFactoryResolver,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  OnInit,\r\n  OnDestroy,\r\n} from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\nimport { ViewCell } from './view-cell';\r\n\r\n@Component({\r\n  selector: 'custom-view-component',\r\n  template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n})\r\nexport class CustomViewComponent implements OnInit, OnDestroy {\r\n\r\n  customComponent: any;\r\n  @Input() cell: Cell;\r\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget: any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.cell && !this.customComponent) {\r\n      this.createCustomComponent();\r\n      this.callOnComponentInit();\r\n      this.patchInstance();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.customComponent) {\r\n      this.customComponent.destroy();\r\n    }\r\n  }\r\n\r\n  protected createCustomComponent() {\r\n    const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\r\n    this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n  }\r\n\r\n  protected callOnComponentInit() {\r\n    const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\r\n    onComponentInitFunction && onComponentInitFunction(this.customComponent.instance);\r\n  }\r\n\r\n  protected patchInstance() {\r\n    Object.assign(this.customComponent.instance, this.getPatch());\r\n  }\r\n\r\n  protected getPatch(): ViewCell {\r\n    return {\r\n      value: this.cell.getValue(),\r\n      rowData: this.cell.getRow().getData()\r\n    }\r\n  }\r\n}\r\n","import {Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-view-mode',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div [ngSwitch]=\"cell.getColumn().type\">\r\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\r\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\r\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\r\n    </div>\r\n    `,\r\n})\r\nexport class ViewCellComponent {\r\n\r\n  @Input() cell: Cell;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Ng2CompleterModule } from 'ng2-completer';\r\n\r\nimport { CellComponent } from './cell.component';\r\nimport { CustomEditComponent } from './cell-edit-mode/custom-edit.component';\r\nimport { DefaultEditComponent } from './cell-edit-mode/default-edit.component';\r\nimport { EditCellComponent } from './cell-edit-mode/edit-cell.component';\r\nimport { CheckboxEditorComponent } from './cell-editors/checkbox-editor.component';\r\nimport { CompleterEditorComponent } from './cell-editors/completer-editor.component';\r\nimport { InputEditorComponent } from './cell-editors/input-editor.component';\r\nimport { SelectEditorComponent } from './cell-editors/select-editor.component';\r\nimport { TextareaEditorComponent } from './cell-editors/textarea-editor.component';\r\nimport { CustomViewComponent } from './cell-view-mode/custom-view.component';\r\nimport { ViewCellComponent } from './cell-view-mode/view-cell.component';\r\n\r\nconst CELL_COMPONENTS = [\r\n  CellComponent,\r\n  CustomEditComponent,\r\n  DefaultEditComponent,\r\n  EditCellComponent,\r\n  CheckboxEditorComponent,\r\n  CompleterEditorComponent,\r\n  InputEditorComponent,\r\n  SelectEditorComponent,\r\n  TextareaEditorComponent,\r\n  CustomViewComponent,\r\n  ViewCellComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    Ng2CompleterModule,\r\n  ],\r\n  declarations: [\r\n    ...CELL_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...CELL_COMPONENTS,\r\n  ],\r\n})\r\nexport class CellModule { }\r\n","import { Subject } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport abstract class DataSource {\r\n\r\n  protected onChangedSource = new Subject<any>();\r\n  protected onAddedSource = new Subject<any>();\r\n  protected onUpdatedSource = new Subject<any>();\r\n  protected onRemovedSource = new Subject<any>();\r\n\r\n  abstract getAll(): Promise<any>;\r\n  abstract getElements(): Promise<any>;\r\n  abstract getSort(): any;\r\n  abstract getFilter(): any;\r\n  abstract getPaging(): any;\r\n  abstract count(): number;\r\n\r\n  refresh() {\r\n    this.emitOnChanged('refresh');\r\n  }\r\n\r\n  load(data: Array<any>): Promise<any> {\r\n    this.emitOnChanged('load');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  onChanged(): Observable<any> {\r\n    return this.onChangedSource.asObservable();\r\n  }\r\n\r\n  onAdded(): Observable<any> {\r\n    return this.onAddedSource.asObservable();\r\n  }\r\n\r\n  onUpdated(): Observable<any> {\r\n    return this.onUpdatedSource.asObservable();\r\n  }\r\n\r\n  onRemoved(): Observable<any> {\r\n    return this.onRemovedSource.asObservable();\r\n  }\r\n\r\n  prepend(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('prepend');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  append(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('append');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  add(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('add');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  remove(element: any): Promise<any> {\r\n    this.emitOnRemoved(element);\r\n    this.emitOnChanged('remove');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  update(element: any, values: any): Promise<any> {\r\n    this.emitOnUpdated(element);\r\n    this.emitOnChanged('update');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  empty(): Promise<any> {\r\n    this.emitOnChanged('empty');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  setSort(conf: Array<any>, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('sort');\r\n    }\r\n  }\r\n\r\n  setFilter(conf: Array<any>, andOperator?: boolean, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('filter');\r\n    }\r\n  }\r\n\r\n  addFilter(fieldConf: {}, andOperator?: boolean, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('filter');\r\n    }\r\n  }\r\n\r\n  setPaging(page: number, perPage: number, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('paging');\r\n    }\r\n  }\r\n\r\n  setPage(page: number, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('page');\r\n    }\r\n  }\r\n\r\n  protected emitOnRemoved(element: any) {\r\n    this.onRemovedSource.next(element);\r\n  }\r\n\r\n  protected emitOnUpdated(element: any) {\r\n    this.onUpdatedSource.next(element);\r\n  }\r\n\r\n  protected emitOnAdded(element: any) {\r\n    this.onAddedSource.next(element);\r\n  }\r\n\r\n  protected emitOnChanged(action: string) {\r\n    this.getElements().then((elements) => this.onChangedSource.next({\r\n      action: action,\r\n      elements: elements,\r\n      paging: this.getPaging(),\r\n      filter: this.getFilter(),\r\n      sort: this.getSort(),\r\n    }));\r\n  }\r\n}\r\n","import { Output, EventEmitter, Input } from '@angular/core';\r\n\r\nimport { Column } from '../../lib/data-set/column';\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\n\r\nexport class FilterDefault {\r\n\r\n  @Input() column: Column;\r\n  @Input() source: DataSource;\r\n  @Input() inputClass: string = '';\r\n\r\n  @Output() filter = new EventEmitter<any>();\r\n\r\n  query: string = '';\r\n\r\n  onFilter(query: string) {\r\n    this.source.addFilter({\r\n      field: this.column.id,\r\n      search: query,\r\n      filter: this.column.getFilterFunction(),\r\n    });\r\n  }\r\n}\r\n","import { Component, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FilterDefault } from './filter-default';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-filter',\r\n  styleUrls: ['./filter.component.scss'],\r\n  template: `\r\n      <div class=\"ng2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\r\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\r\n                             [query]=\"query\"\r\n                             [column]=\"column\"\r\n                             [source]=\"source\"\r\n                             [inputClass]=\"inputClass\"\r\n                             (filter)=\"onFilter($event)\">\r\n        </custom-table-filter>\r\n        <default-table-filter *ngSwitchDefault\r\n                              [query]=\"query\"\r\n                              [column]=\"column\"\r\n                              [source]=\"source\"\r\n                              [inputClass]=\"inputClass\"\r\n                              (filter)=\"onFilter($event)\">\r\n        </default-table-filter>\r\n      </div>\r\n    `,\r\n})\r\nexport class FilterComponent extends FilterDefault implements OnChanges {\r\n  query: string = '';\r\n  protected dataChangedSub: Subscription;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.source) {\r\n      if (!changes.source.firstChange) {\r\n        this.dataChangedSub.unsubscribe();\r\n      }\r\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n        const filterConf = this.source.getFilter();\r\n        if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\r\n          this.query = '';\r\n\r\n          // add a check for existing filters an set the query if one exists for this column\r\n          // this covers instances where the filter is set by user code while maintaining existing functionality\r\n        } else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\r\n          filterConf.filters.forEach((k: any, v: any) => {\r\n            if (k.field == this.column.id) {\r\n              this.query = k.search;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\n\r\nimport {FilterDefault} from \"./filter-default\";\r\n\r\n@Component({\r\n  selector: 'default-table-filter',\r\n  template: `\r\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\r\n      <select-filter *ngSwitchCase=\"'list'\"\r\n                     [query]=\"query\"\r\n                     [ngClass]=\"inputClass\"\r\n                     [column]=\"column\"\r\n                     (filter)=\"onFilter($event)\">\r\n      </select-filter>\r\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\r\n                       [query]=\"query\"\r\n                       [ngClass]=\"inputClass\"\r\n                       [column]=\"column\"\r\n                       (filter)=\"onFilter($event)\">\r\n      </checkbox-filter>\r\n      <completer-filter *ngSwitchCase=\"'completer'\"\r\n                        [query]=\"query\"\r\n                        [ngClass]=\"inputClass\"\r\n                        [column]=\"column\"\r\n                        (filter)=\"onFilter($event)\">\r\n      </completer-filter>\r\n      <input-filter *ngSwitchDefault\r\n                    [query]=\"query\"\r\n                    [ngClass]=\"inputClass\"\r\n                    [column]=\"column\"\r\n                    (filter)=\"onFilter($event)\">\r\n      </input-filter>\r\n    </ng-container>\r\n  `,\r\n})\r\nexport class DefaultFilterComponent extends FilterDefault {\r\n  @Input() query: string;\r\n}\r\n","import {\r\n  Component,\r\n  ComponentFactoryResolver, Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { FilterDefault } from './filter-default';\r\n\r\n@Component({\r\n  selector: 'custom-table-filter',\r\n  template: `<ng-template #dynamicTarget></ng-template>`,\r\n})\r\nexport class CustomFilterComponent extends FilterDefault implements OnChanges, OnDestroy {\r\n  @Input() query: string;\r\n  customComponent: any;\r\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget: any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.column && !this.customComponent) {\r\n      const componentFactory = this.resolver.resolveComponentFactory(this.column.filter.component);\r\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n\r\n      // set @Inputs and @Outputs of custom component\r\n      this.customComponent.instance.query = this.query;\r\n      this.customComponent.instance.column = this.column;\r\n      this.customComponent.instance.source = this.source;\r\n      this.customComponent.instance.inputClass = this.inputClass;\r\n      this.customComponent.instance.filter.subscribe((event: any) => this.onFilter(event));\r\n    }\r\n    if (this.customComponent) {\r\n      this.customComponent.instance.ngOnChanges(changes);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.customComponent) {\r\n      this.customComponent.destroy();\r\n    }\r\n  }\r\n}\r\n","import { Input, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Column } from '../../../lib/data-set/column';\r\n\r\nexport class DefaultFilter implements Filter, OnDestroy {\r\n\r\n  delay: number = 300;\r\n  changesSubscription: Subscription;\r\n  @Input() query: string;\r\n  @Input() inputClass: string;\r\n  @Input() column: Column;\r\n  @Output() filter = new EventEmitter<string>();\r\n\r\n  ngOnDestroy() {\r\n    if (this.changesSubscription) {\r\n      this.changesSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  setFilter() {\r\n    this.filter.emit(this.query);\r\n  }\r\n}\r\n\r\nexport interface Filter {\r\n\r\n  delay?: number;\r\n  changesSubscription?: Subscription;\r\n  query: string;\r\n  inputClass: string;\r\n  column: Column;\r\n  filter: EventEmitter<string>;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'checkbox-filter',\r\n  template: `\r\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n    <a href=\"#\" *ngIf=\"filterActive\"\r\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\r\n  `,\r\n})\r\nexport class CheckboxFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  filterActive: boolean = false;\r\n  inputControl = new FormControl();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.changesSubscription = this.inputControl.valueChanges\r\n      .pipe(debounceTime(this.delay))\r\n      .subscribe((checked: boolean) => {\r\n        this.filterActive = true;\r\n        const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\r\n        const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\r\n        this.query = checked ? trueVal : falseVal;\r\n        this.setFilter();\r\n      });\r\n  }\r\n\r\n  resetFilter(event: any) {\r\n    event.preventDefault();\r\n    this.query = '';\r\n    this.inputControl.setValue(false, { emitEvent: false });\r\n    this.filterActive = false;\r\n    this.setFilter();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { CompleterService } from 'ng2-completer';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\nimport { distinctUntilChanged, debounceTime, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'completer-filter',\r\n  template: `\r\n    <ng2-completer [(ngModel)]=\"query\"\r\n                   (ngModelChange)=\"inputTextChanged($event)\"\r\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\r\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\r\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"completerContent.next($event)\">\r\n    </ng2-completer>\r\n  `,\r\n})\r\nexport class CompleterFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  completerContent = new Subject<any>();\r\n\r\n  constructor(private completerService: CompleterService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const config = this.column.getFilterConfig().completer;\r\n    config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n    config.dataService.descriptionField(config.descriptionField);\r\n\r\n    this.changesSubscription = this.completerContent\r\n      .pipe(\r\n        map((ev: any) => (ev && ev.title) || ev || ''),\r\n        distinctUntilChanged(),\r\n        debounceTime(this.delay)\r\n      )\r\n      .subscribe((search: string) => {\r\n        this.query = search;\r\n        this.setFilter();\r\n      });\r\n  }\r\n\r\n  inputTextChanged(event: string) {\r\n    // workaround to trigger the search event when the home/end buttons are clicked\r\n    // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\r\n    // so here it gets called manually\r\n    if (event === '') {\r\n      this.completerContent.next(event);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { debounceTime, distinctUntilChanged, skip } from 'rxjs/operators';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\n\r\n@Component({\r\n  selector: 'input-filter',\r\n  template: `\r\n    <input\r\n      [ngClass]=\"inputClass\"\r\n      [formControl]=\"inputControl\"\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n      placeholder=\"{{ column.title }}\"/>\r\n  `,\r\n})\r\nexport class InputFilterComponent extends DefaultFilter implements OnInit, OnChanges {\r\n\r\n  inputControl = new FormControl();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.query) {\r\n      this.inputControl.setValue(this.query);\r\n    }\r\n    this.inputControl.valueChanges\r\n      .pipe(\r\n        distinctUntilChanged(),\r\n        debounceTime(this.delay),\r\n      )\r\n      .subscribe((value: string) => {\r\n        this.query = this.inputControl.value;\r\n        this.setFilter();\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.query) {\r\n      this.inputControl.setValue(this.query);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { distinctUntilChanged, debounceTime, skip } from 'rxjs/operators';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\n\r\n@Component({\r\n  selector: 'select-filter',\r\n  template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            #inputControl\r\n            [(ngModel)]=\"query\">\r\n\r\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\r\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\r\n          {{ option.title }}\r\n        </option>\r\n    </select>\r\n  `,\r\n})\r\nexport class SelectFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  @ViewChild('inputControl', { read: NgControl, static: true }) inputControl: NgControl;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputControl.valueChanges\r\n      .pipe(\r\n        skip(1),\r\n        distinctUntilChanged(),\r\n        debounceTime(this.delay)\r\n      )\r\n      .subscribe((value: string) => this.setFilter());\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2CompleterModule } from 'ng2-completer';\r\n\r\nimport { FilterComponent } from './filter.component';\r\nimport { DefaultFilterComponent } from \"./default-filter.component\";\r\nimport { CustomFilterComponent } from \"./custom-filter.component\";\r\nimport { CheckboxFilterComponent } from './filter-types/checkbox-filter.component';\r\nimport { CompleterFilterComponent } from './filter-types/completer-filter.component';\r\nimport { InputFilterComponent } from './filter-types/input-filter.component';\r\nimport { SelectFilterComponent } from './filter-types/select-filter.component';\r\n\r\nconst FILTER_COMPONENTS = [\r\n  FilterComponent,\r\n  DefaultFilterComponent,\r\n  CustomFilterComponent,\r\n  CheckboxFilterComponent,\r\n  CompleterFilterComponent,\r\n  InputFilterComponent,\r\n  SelectFilterComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    Ng2CompleterModule,\r\n  ],\r\n  declarations: [\r\n    ...FILTER_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...FILTER_COMPONENTS,\r\n  ],\r\n})\r\nexport class FilterModule { }\r\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-pager',\r\n  styleUrls: ['./pager.component.scss'],\r\n  template: `\r\n    <nav *ngIf=\"shouldShow()\" class=\"ng2-smart-pagination-nav\">\r\n      <ul class=\"ng2-smart-pagination pagination\">\r\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n            <span class=\"sr-only\">First</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"ng2-smart-page-link page-link page-link-prev\" href=\"#\"\r\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\r\n            <span aria-hidden=\"true\">&lt;</span>\r\n            <span class=\"sr-only\">Prev</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"ng2-smart-page-item page-item\"\r\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\r\n          <span class=\"ng2-smart-page-link page-link\"\r\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\r\n        </li>\r\n\r\n        <li class=\"ng2-smart-page-item page-item\"\r\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"ng2-smart-page-link page-link page-link-next\" href=\"#\"\r\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\r\n            <span aria-hidden=\"true\">&gt;</span>\r\n            <span class=\"sr-only\">Next</span>\r\n          </a>\r\n        </li>\r\n        \r\n        <li class=\"ng2-smart-page-item page-item\"\r\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n            <span class=\"sr-only\">Last</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    \r\n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"ng2-smart-pagination-per-page\">\r\n      <label for=\"per-page\">\r\n        Per Page:\r\n      </label>\r\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\r\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\r\n      </select>\r\n    </nav>\r\n  `,\r\n})\r\nexport class PagerComponent implements OnChanges {\r\n\r\n  @Input() source: DataSource;\r\n  @Input() perPageSelect: any[] = [];\r\n\r\n  @Output() changePage = new EventEmitter<any>();\r\n\r\n  currentPerPage: any;\r\n\r\n  protected pages: Array<any>;\r\n  protected page: number;\r\n  protected count: number = 0;\r\n  protected perPage: number;\r\n\r\n  protected dataChangedSub: Subscription;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.source) {\r\n      if (!changes.source.firstChange) {\r\n        this.dataChangedSub.unsubscribe();\r\n      }\r\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n        this.page = this.source.getPaging().page;\r\n        this.perPage = this.source.getPaging().perPage;\r\n        this.currentPerPage = this.perPage;\r\n        this.count = this.source.count();\r\n        if (this.isPageOutOfBounce()) {\r\n          this.source.setPage(--this.page);\r\n        }\r\n\r\n        this.processPageChange(dataChanges);\r\n        this.initPages();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * We change the page here depending on the action performed against data source\r\n   * if a new element was added to the end of the table - then change the page to the last\r\n   * if a new element was added to the beginning of the table - then to the first page\r\n   * @param changes\r\n   */\r\n  processPageChange(changes: any) {\r\n    if (changes['action'] === 'prepend') {\r\n      this.source.setPage(1);\r\n    }\r\n    if (changes['action'] === 'append') {\r\n      this.source.setPage(this.getLast());\r\n    }\r\n  }\r\n\r\n  shouldShow(): boolean {\r\n    return this.source.count() > this.perPage;\r\n  }\r\n\r\n  paginate(page: number): boolean {\r\n    this.source.setPage(page);\r\n    this.page = page;\r\n    this.changePage.emit({ page });\r\n    return false;\r\n  }\r\n\r\n  next(): boolean {\r\n    return this.paginate(this.getPage() + 1);\r\n  }\r\n\r\n  prev(): boolean {\r\n    return this.paginate(this.getPage() - 1);\r\n  }\r\n\r\n  getPage(): number {\r\n    return this.page;\r\n  }\r\n\r\n  getPages(): Array<any> {\r\n    return this.pages;\r\n  }\r\n\r\n  getLast(): number {\r\n    return Math.ceil(this.count / this.perPage);\r\n  }\r\n\r\n  isPageOutOfBounce(): boolean {\r\n    return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\r\n  }\r\n\r\n  initPages() {\r\n    const pagesCount = this.getLast();\r\n    let showPagesCount = 4;\r\n    showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\r\n    this.pages = [];\r\n\r\n    if (this.shouldShow()) {\r\n\r\n      let middleOne = Math.ceil(showPagesCount / 2);\r\n      middleOne = this.page >= middleOne ? this.page : middleOne;\r\n\r\n      let lastOne = middleOne + Math.floor(showPagesCount / 2);\r\n      lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\r\n\r\n      const firstOne = lastOne - showPagesCount + 1;\r\n\r\n      for (let i = firstOne; i <= lastOne; i++) {\r\n        this.pages.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangePerPage(event: any) {\r\n    if (this.currentPerPage) {\r\n\r\n      if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\r\n        this.source.getPaging().perPage = null;\r\n      } else {\r\n        this.source.getPaging().perPage = this.currentPerPage * 1;\r\n        this.source.refresh();\r\n      }\r\n      this.initPages();\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { PagerComponent } from './pager.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    PagerComponent,\r\n  ],\r\n  exports: [\r\n    PagerComponent,\r\n  ],\r\n})\r\nexport class PagerModule { }\r\n","import {Component, Input, Output, EventEmitter, } from '@angular/core';\r\n\r\nimport { Grid } from '../../lib/grid';\r\nimport { Row } from '../../lib/data-set/row';\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\nimport {Column} from \"../../lib/data-set/column\";\r\n\r\n@Component({\r\n  selector: '[ng2-st-tbody]',\r\n  styleUrls: ['./tbody.component.scss'],\r\n  templateUrl: './tbody.component.html',\r\n})\r\nexport class Ng2SmartTableTbodyComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n  @Input() deleteConfirm: EventEmitter<any>;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n  @Input() rowClassFunction: Function;\r\n\r\n  @Output() save = new EventEmitter<any>();\r\n  @Output() cancel = new EventEmitter<any>();\r\n  @Output() edit = new EventEmitter<any>();\r\n  @Output() delete = new EventEmitter<any>();\r\n  @Output() custom = new EventEmitter<any>();\r\n  @Output() edited = new EventEmitter<any>();\r\n  @Output() userSelectRow = new EventEmitter<any>();\r\n  @Output() editRowSelect = new EventEmitter<any>();\r\n  @Output() multipleSelectRow = new EventEmitter<any>();\r\n  @Output() rowHover = new EventEmitter<any>();\r\n\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n  mode: string;\r\n  editInputClass: string;\r\n  isActionAdd: boolean;\r\n  isActionEdit: boolean;\r\n  isActionDelete: boolean;\r\n  noDataMessage: boolean;\r\n\r\n  get tableColumnsCount() {\r\n    const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\r\n    return this.grid.getColumns().length + actionColumns;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.mode = this.grid.getSetting('mode');\r\n    this.editInputClass = this.grid.getSetting('edit.inputClass');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n    this.isActionAdd = this.grid.getSetting('actions.add');\r\n    this.isActionEdit = this.grid.getSetting('actions.edit');\r\n    this.isActionDelete = this.grid.getSetting('actions.delete');\r\n    this.noDataMessage = this.grid.getSetting('noDataMessage');\r\n  }\r\n}\r\n","import { Component, Input, EventEmitter, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { Row } from '../../../lib/data-set/row';\r\n\r\n@Component({\r\n  selector: 'ng2-st-tbody-create-cancel',\r\n  template: `\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-save\"\r\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-cancel\"\r\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\r\n  `,\r\n})\r\nexport class TbodyCreateCancelComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n\r\n  cancelButtonContent: string;\r\n  saveButtonContent: string;\r\n\r\n  onSave(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.grid.save(this.row, this.editConfirm);\r\n  }\r\n\r\n  onCancelEdit(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.row.isInEditing = false;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\r\n    this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent')\r\n  }\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { Row } from '../../../lib/data-set/row';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-st-tbody-edit-delete',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <a href=\"#\" *ngIf=\"isActionEdit\" class=\"ng2-smart-action ng2-smart-action-edit-edit\"\r\n        [innerHTML]=\"editRowButtonContent\" (click)=\"onEdit($event)\"></a>\r\n    <a href=\"#\" *ngIf=\"isActionDelete\" class=\"ng2-smart-action ng2-smart-action-delete-delete\"\r\n        [innerHTML]=\"deleteRowButtonContent\" (click)=\"onDelete($event)\"></a>\r\n  `,\r\n})\r\nexport class TbodyEditDeleteComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() source: DataSource;\r\n  @Input() deleteConfirm: EventEmitter<any>;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n\r\n  @Output() edit = new EventEmitter<any>();\r\n  @Output() delete = new EventEmitter<any>();\r\n  @Output() editRowSelect = new EventEmitter<any>();\r\n\r\n  isActionEdit: boolean;\r\n  isActionDelete: boolean;\r\n  editRowButtonContent: string;\r\n  deleteRowButtonContent: string;\r\n\r\n  onEdit(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.editRowSelect.emit(this.row);\r\n\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.edit.emit({\r\n        data: this.row.getData(),\r\n        source: this.source,\r\n      });\r\n    } else {\r\n      this.grid.edit(this.row);\r\n    }\r\n  }\r\n\r\n  onDelete(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.delete.emit({\r\n        data: this.row.getData(),\r\n        source: this.source,\r\n      });\r\n    } else {\r\n      this.grid.delete(this.row, this.deleteConfirm);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(){\r\n    this.isActionEdit = this.grid.getSetting('actions.edit');\r\n    this.isActionDelete = this.grid.getSetting('actions.delete');\r\n    this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\r\n    this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Row } from '../../../lib/data-set/row';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n    selector: 'ng2-st-tbody-custom',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    template: `\r\n      <a *ngFor=\"let action of grid.getSetting('actions.custom')\" href=\"#\"\r\n         class=\"ng2-smart-action ng2-smart-action-custom-custom\" \r\n         [innerHTML]=\"action.title\"\r\n         (click)=\"onCustom(action, $event)\"></a>\r\n        `\r\n})\r\nexport class TbodyCustomComponent {\r\n\r\n    @Input() grid: Grid;\r\n    @Input() row: Row;\r\n    @Input() source: any;\r\n    @Output() custom = new EventEmitter<any>();\r\n\r\n    onCustom(action: any, event: any) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        this.custom.emit({\r\n            action: action.name,\r\n            data: this.row.getData(),\r\n            source: this.source\r\n        });\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { CellModule } from '../cell/cell.module';\r\n\r\nimport { Ng2SmartTableTbodyComponent } from './tbody.component';\r\nimport { TbodyCreateCancelComponent } from './cells/create-cancel.component';\r\nimport { TbodyEditDeleteComponent } from './cells/edit-delete.component';\r\nimport { TbodyCustomComponent } from './cells/custom.component';\r\n\r\nconst TBODY_COMPONENTS = [\r\n  TbodyCreateCancelComponent,\r\n  TbodyEditDeleteComponent,\r\n  TbodyCustomComponent,\r\n  Ng2SmartTableTbodyComponent\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    CellModule,\r\n  ],\r\n  declarations: [\r\n    ...TBODY_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...TBODY_COMPONENTS,\r\n  ],\r\n})\r\nexport class TBodyModule { }\r\n","import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../lib/grid';\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\n\r\n@Component({\r\n    selector: '[ng2-st-thead]',\r\n    templateUrl: './thead.component.html',\r\n})\r\nexport class Ng2SmartTableTheadComponent implements OnChanges {\r\n\r\n    @Input() grid: Grid;\r\n    @Input() source: DataSource;\r\n    @Input() isAllSelected: boolean;\r\n    @Input() createConfirm: EventEmitter<any>;\r\n\r\n    @Output() sort = new EventEmitter<any>();\r\n    @Output() selectAllRows = new EventEmitter<any>();\r\n    @Output() create = new EventEmitter<any>();\r\n    @Output() filter = new EventEmitter<any>();\r\n    @Output() onSortTable = new EventEmitter<any>();\r\n    isHideHeader: boolean;\r\n    isHideSubHeader: boolean;\r\n\r\n  ngOnChanges() {\r\n      this.isHideHeader = this.grid.getSetting('hideHeader');\r\n      this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\r\n    }\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n  selector: 'ng2-st-actions',\r\n  template: `\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-create\"\r\n        [innerHTML]=\"createButtonContent\"\r\n        (click)=\"$event.preventDefault();create.emit($event)\"></a>\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-cancel\"\r\n        [innerHTML]=\"cancelButtonContent\"\r\n        (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\r\n  `,\r\n})\r\nexport class ActionsComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Output() create = new EventEmitter<any>();\r\n\r\n  createButtonContent: string;\r\n  cancelButtonContent: string;\r\n\r\n  ngOnChanges() {\r\n    this.createButtonContent = this.grid.getSetting('add.createButtonContent');\r\n    this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\r\n  }\r\n}\r\n","import {Component, Input, AfterViewInit, ElementRef, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n  selector: '[ng2-st-actions-title]',\r\n  template: `\r\n    <div class=\"ng2-smart-title\">{{ actionsColumnTitle }}</div>\r\n  `,\r\n})\r\nexport class ActionsTitleComponent implements AfterViewInit, OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n\r\n  actionsColumnTitle: string;\r\n\r\n  constructor(private ref: ElementRef) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.ref.nativeElement.classList.add('ng2-smart-actions');\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, AfterViewInit, ElementRef, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: '[ng2-st-add-button]',\r\n  template: `\r\n    <a *ngIf=\"isActionAdd\" href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-add\"\r\n        [innerHTML]=\"addNewButtonContent\" (click)=\"onAdd($event)\"></a>\r\n  `,\r\n})\r\nexport class AddButtonComponent implements AfterViewInit, OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n  @Output() create = new EventEmitter<any>();\r\n\r\n  isActionAdd: boolean;\r\n  addNewButtonContent: string;\r\n\r\n  constructor(private ref: ElementRef) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.ref.nativeElement.classList.add('ng2-smart-actions-title', 'ng2-smart-actions-title-add');\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.isActionAdd = this.grid.getSetting('actions.add');\r\n    this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\r\n  }\r\n\r\n  onAdd(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.create.emit({\r\n        source: this.source,\r\n      });\r\n    } else {\r\n      this.grid.createFormShown = true;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: '[ng2-st-checkbox-select-all]',\r\n  template: `\r\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\r\n  `,\r\n})\r\nexport class CheckboxSelectAllComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n  @Input() isAllSelected: boolean;\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Column } from '../../../lib/data-set/column';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-st-column-title',\r\n  template: `\r\n    <div class=\"ng2-smart-title\">\r\n      <ng2-smart-table-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\" (onSortTable)=\"onSortTable.emit($event)\"></ng2-smart-table-title>\r\n    </div>\r\n  `,\r\n})\r\nexport class ColumnTitleComponent {\r\n\r\n  @Input() column: Column;\r\n  @Input() source: DataSource;\r\n\r\n  @Output() sort = new EventEmitter<any>();\r\n  @Output() onSortTable = new EventEmitter<any>();\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { DataSource } from '../../../../lib/data-source/data-source';\r\nimport { Column } from '../../../../lib/data-set/column';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-title',\r\n  styleUrls: ['./title.component.scss'],\r\n  template: `\r\n    <a href=\"#\" *ngIf=\"column.isSortable\"\r\n                (click)=\"_sort($event)\"\r\n                class=\"ng2-smart-sort-link sort\"\r\n                [ngClass]=\"currentDirection\">\r\n      {{ column.title }}\r\n    </a>\r\n    <span class=\"ng2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\r\n  `,\r\n})\r\nexport class TitleComponent implements OnChanges {\r\n\r\n  currentDirection = '';\r\n  @Input() column: Column;\r\n  @Input() source: DataSource;\r\n  @Output() sort = new EventEmitter<any>();\r\n  @Output() onSortTable = new EventEmitter<any>();\r\n\r\n  protected dataChangedSub: Subscription;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.source) {\r\n      if (!changes.source.firstChange) {\r\n        this.dataChangedSub.unsubscribe();\r\n      }\r\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n        const sortConf = this.source.getSort();\r\n\r\n        if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\r\n          this.currentDirection = sortConf[0]['direction'];\r\n        } else {\r\n          this.currentDirection = '';\r\n        }\r\n\r\n        sortConf.forEach((fieldConf: any) => {\r\n\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  _sort(event: any) {\r\n    event.preventDefault();\r\n    this.changeSortDirection();\r\n    this.onSortTable.emit({ column: this.column.id, direction: this.currentDirection });\r\n    this.source.setSort([\r\n      {\r\n        field: this.column.id,\r\n        direction: this.currentDirection,\r\n        compare: this.column.getCompareFunction(),\r\n      },\r\n    ]);\r\n    this.sort.emit(null);\r\n  }\r\n\r\n  changeSortDirection(): string {\r\n    if (this.currentDirection) {\r\n      const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\r\n      this.currentDirection = newDirection;\r\n    } else {\r\n      this.currentDirection = this.column.sortDirection;\r\n    }\r\n    return this.currentDirection;\r\n  }\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\nimport { Column } from \"../../../lib/data-set/column\";\r\n\r\n@Component({\r\n  selector: '[ng2-st-thead-filters-row]',\r\n  template: `\r\n    <th *ngIf=\"isMultiSelectVisible\"></th>\r\n    <th ng2-st-add-button *ngIf=\"showActionColumnLeft\"\r\n                          [grid]=\"grid\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n    <th *ngFor=\"let column of grid.getColumns()\" class=\"ng2-smart-th {{ column.id }}\">\r\n      <ng2-smart-table-filter [source]=\"source\"\r\n                              [column]=\"column\"\r\n                              [inputClass]=\"filterInputClass\"\r\n                              (filter)=\"filter.emit($event)\">\r\n      </ng2-smart-table-filter>\r\n    </th>\r\n    <th ng2-st-add-button *ngIf=\"showActionColumnRight\"\r\n                          [grid]=\"grid\"\r\n                          [source]=\"source\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n  `,\r\n})\r\nexport class TheadFitlersRowComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n\r\n  @Output() create = new EventEmitter<any>();\r\n  @Output() filter = new EventEmitter<any>();\r\n\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n  filterInputClass: string;\r\n\r\n  ngOnChanges() {\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n    this.filterInputClass = this.grid.getSetting('filter.inputClass');\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { Row } from '../../../lib/data-set/row';\r\n\r\n@Component({\r\n  selector: '[ng2-st-thead-form-row]',\r\n  template: `\r\n      <td *ngIf=\"\"></td>\r\n      <td  *ngIf=\"showActionColumnLeft\"  class=\"ng2-smart-actions\">\r\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\r\n      </td>\r\n      <td *ngFor=\"let cell of grid.getNewRow().getCells()\">\r\n        <ng2-smart-table-cell [cell]=\"cell\"\r\n                              [grid]=\"grid\"\r\n                              [isNew]=\"true\"\r\n                              [createConfirm]=\"createConfirm\"\r\n                              [inputClass]=\"addInputClass\"\r\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\r\n                              (edited)=\"onCreate($event)\">\r\n        </ng2-smart-table-cell>\r\n      </td>\r\n      <td  *ngIf=\"showActionColumnRight\"  class=\"ng2-smart-actions\">\r\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\r\n      </td>\r\n  `,\r\n})\r\nexport class TheadFormRowComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() createConfirm: EventEmitter<any>;\r\n\r\n  @Output() create = new EventEmitter<any>();\r\n\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n  addInputClass: string;\r\n\r\n  onCreate(event: any) {\r\n    event.stopPropagation();\r\n\r\n    this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n  }\r\n\r\n  ngOnChanges(){\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n    this.addInputClass = this.grid.getSetting('add.inputClass');\r\n  }\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\nimport { Column } from \"../../../lib/data-set/column\";\r\n\r\n@Component({\r\n  selector: '[ng2-st-thead-titles-row]',\r\n  template: `\r\n    <th ng2-st-checkbox-select-all *ngIf=\"isMultiSelectVisible\"\r\n                                   [grid]=\"grid\"\r\n                                   [source]=\"source\"\r\n                                   [isAllSelected]=\"isAllSelected\"\r\n                                   (click)=\"selectAllRows.emit($event)\">\r\n    </th>\r\n    <th ng2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\r\n    <th *ngFor=\"let column of grid.getColumns()\" class=\"ng2-smart-th {{ column.id }}\" [ngClass]=\"column.class\"\r\n      [style.width]=\"column.width\" >\r\n      <ng2-st-column-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\" (onSortTable)=\"onSortTable.emit($event)\"></ng2-st-column-title>\r\n    </th>\r\n    <th ng2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\r\n  `,\r\n})\r\nexport class TheadTitlesRowComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() isAllSelected: boolean;\r\n  @Input() source: DataSource;\r\n\r\n  @Output() sort = new EventEmitter<any>();\r\n  @Output() selectAllRows = new EventEmitter<any>();\r\n  @Output() onSortTable = new EventEmitter<any>();\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n\r\n\r\n  ngOnChanges() {\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { FilterModule } from '../filter/filter.module';\r\nimport { CellModule } from '../cell/cell.module';\r\n\r\nimport { Ng2SmartTableTheadComponent } from './thead.component';\r\nimport { ActionsComponent } from './cells/actions.component';\r\nimport { ActionsTitleComponent } from './cells/actions-title.component';\r\nimport { AddButtonComponent } from './cells/add-button.component';\r\nimport { CheckboxSelectAllComponent } from './cells/checkbox-select-all.component';\r\nimport { ColumnTitleComponent } from './cells/column-title.component';\r\nimport { TitleComponent } from './cells/title/title.component';\r\nimport { TheadFitlersRowComponent } from './rows/thead-filters-row.component';\r\nimport { TheadFormRowComponent } from './rows/thead-form-row.component';\r\nimport { TheadTitlesRowComponent } from './rows/thead-titles-row.component';\r\n\r\nconst THEAD_COMPONENTS = [\r\n  ActionsComponent,\r\n  ActionsTitleComponent,\r\n  AddButtonComponent,\r\n  CheckboxSelectAllComponent,\r\n  ColumnTitleComponent,\r\n  TitleComponent,\r\n  TheadFitlersRowComponent,\r\n  TheadFormRowComponent,\r\n  TheadTitlesRowComponent,\r\n  Ng2SmartTableTheadComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FilterModule,\r\n    CellModule,\r\n  ],\r\n  declarations: [\r\n    ...THEAD_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...THEAD_COMPONENTS,\r\n  ],\r\n})\r\nexport class THeadModule { }\r\n","export function compareValues(direction: any, a: any, b: any) {\r\n  if (a < b) {\r\n    return -1 * direction;\r\n  }\r\n  if (a > b) {\r\n    return direction;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport class LocalSorter {\r\n\r\n  static sort(data: Array<any>, field: string, direction: string, customCompare?: Function): Array<any> {\r\n\r\n    const dir: number = (direction === 'asc') ? 1 : -1;\r\n    const compare: Function = customCompare ? customCompare : compareValues;\r\n\r\n    return data.sort((a, b) => {\r\n      return compare.call(null, dir, a[field], b[field]);\r\n    });\r\n  }\r\n}\r\n","export function filterValues(value: string, search: string) {\r\n  return value.toString().toLowerCase().includes(search.toString().toLowerCase());\r\n}\r\n\r\nexport class LocalFilter {\r\n\r\n  static filter(data: Array<any>, field: string, search: string, customFilter?: Function): Array<any> {\r\n    const filter: Function = customFilter ? customFilter : filterValues;\r\n\r\n    return data.filter((el) => {\r\n      const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\r\n      return filter.call(null, value, search);\r\n    });\r\n  }\r\n}\r\n","export class LocalPager {\r\n\r\n  static paginate(data: Array<any>, page: number, perPage: number): Array<any> {\r\n    return data.slice(perPage * (page - 1), perPage * page);\r\n  }\r\n}\r\n","import { LocalSorter } from './local.sorter';\r\nimport { LocalFilter } from './local.filter';\r\nimport { LocalPager } from './local.pager';\r\nimport { DataSource } from '../data-source';\r\nimport { deepExtend } from '../../helpers';\r\n\r\nexport class LocalDataSource extends DataSource {\r\n\r\n  protected data: Array<any> = [];\r\n  protected filteredAndSorted: Array<any> = [];\r\n  protected sortConf: Array<any> = [];\r\n  protected filterConf: any = {\r\n    filters: [],\r\n    andOperator: true,\r\n  };\r\n  protected pagingConf: any = {};\r\n\r\n  constructor(data: Array<any> = []) {\r\n    super();\r\n\r\n    this.data = data;\r\n  }\r\n\r\n  load(data: Array<any>): Promise<any> {\r\n    this.data = data;\r\n\r\n    return super.load(data);\r\n  }\r\n\r\n  prepend(element: any): Promise<any> {\r\n    this.reset(true);\r\n\r\n    this.data.unshift(element);\r\n    return super.prepend(element);\r\n  }\r\n\r\n  append(element: any): Promise<any> {\r\n    this.reset(true);\r\n\r\n    this.data.push(element);\r\n    return super.append(element);\r\n  }\r\n\r\n  add(element: any): Promise<any> {\r\n    this.data.push(element);\r\n\r\n    return super.add(element);\r\n  }\r\n\r\n  remove(element: any): Promise<any> {\r\n    this.data = this.data.filter(el => el !== element);\r\n\r\n    return super.remove(element);\r\n  }\r\n\r\n  update(element: any, values: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.find(element).then((found) => {\r\n        found = deepExtend(found, values);\r\n        super.update(found, values).then(resolve).catch(reject);\r\n      }).catch(reject);\r\n    });\r\n  }\r\n\r\n  find(element: any): Promise<any> {\r\n    const found = this.data.find(el => el === element);\r\n    if (found) {\r\n      return Promise.resolve(found);\r\n    }\r\n\r\n    return Promise.reject(new Error('Element was not found in the dataset'));\r\n  }\r\n\r\n  getElements(): Promise<any> {\r\n    const data = this.data.slice(0);\r\n    return Promise.resolve(this.prepareData(data));\r\n  }\r\n\r\n  getFilteredAndSorted(): Promise<any> {\r\n    let data = this.data.slice(0);\r\n    this.prepareData(data);\r\n    return Promise.resolve(this.filteredAndSorted);\r\n  }\r\n\r\n  getAll(): Promise<any> {\r\n    const data = this.data.slice(0);\r\n    return Promise.resolve(data);\r\n  }\r\n\r\n  reset(silent = false) {\r\n    if (silent) {\r\n      this.filterConf = {\r\n        filters: [],\r\n        andOperator: true,\r\n      };\r\n      this.sortConf = [];\r\n      this.pagingConf['page'] = 1;\r\n    } else {\r\n      this.setFilter([], true, false);\r\n      this.setSort([], false);\r\n      this.setPage(1);\r\n    }\r\n  }\r\n\r\n  empty(): Promise<any> {\r\n    this.data = [];\r\n\r\n    return super.empty();\r\n  }\r\n\r\n  count(): number {\r\n    return this.filteredAndSorted.length;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Array of conf objects\r\n   * [\r\n   *  {field: string, direction: asc|desc|null, compare: Function|null},\r\n   * ]\r\n   * @param conf\r\n   * @param doEmit\r\n   * @returns {LocalDataSource}\r\n   */\r\n  setSort(conf: Array<any>, doEmit = true): LocalDataSource {\r\n    if (conf !== null) {\r\n\r\n      conf.forEach((fieldConf) => {\r\n        if (!fieldConf['field'] || typeof fieldConf['direction'] === 'undefined') {\r\n          throw new Error('Sort configuration object is not valid');\r\n        }\r\n      });\r\n      this.sortConf = conf;\r\n    }\r\n\r\n    super.setSort(conf, doEmit);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Array of conf objects\r\n   * [\r\n   *  {field: string, search: string, filter: Function|null},\r\n   * ]\r\n   * @param conf\r\n   * @param andOperator\r\n   * @param doEmit\r\n   * @returns {LocalDataSource}\r\n   */\r\n  setFilter(conf: Array<any>, andOperator = true, doEmit = true): LocalDataSource {\r\n    if (conf && conf.length > 0) {\r\n      conf.forEach((fieldConf) => {\r\n        this.addFilter(fieldConf, andOperator, false);\r\n      });\r\n    } else {\r\n      this.filterConf = {\r\n        filters: [],\r\n        andOperator: true,\r\n      };\r\n    }\r\n    this.filterConf.andOperator = andOperator;\r\n    this.pagingConf['page'] = 1;\r\n\r\n    super.setFilter(conf, andOperator, doEmit);\r\n    return this;\r\n  }\r\n\r\n  addFilter(fieldConf: any, andOperator = true, doEmit: boolean = true): LocalDataSource {\r\n    if (!fieldConf['field'] || typeof fieldConf['search'] === 'undefined') {\r\n      throw new Error('Filter configuration object is not valid');\r\n    }\r\n\r\n    let found = false;\r\n    this.filterConf.filters.forEach((currentFieldConf: any, index: any) => {\r\n      if (currentFieldConf['field'] === fieldConf['field']) {\r\n        this.filterConf.filters[index] = fieldConf;\r\n        found = true;\r\n      }\r\n    });\r\n    if (!found) {\r\n      this.filterConf.filters.push(fieldConf);\r\n    }\r\n    this.filterConf.andOperator = andOperator;\r\n    super.addFilter(fieldConf, andOperator, doEmit);\r\n    return this;\r\n  }\r\n\r\n  setPaging(page: number, perPage: number, doEmit: boolean = true): LocalDataSource {\r\n    this.pagingConf['page'] = page;\r\n    this.pagingConf['perPage'] = perPage;\r\n\r\n    super.setPaging(page, perPage, doEmit);\r\n    return this;\r\n  }\r\n\r\n  setPage(page: number, doEmit: boolean = true): LocalDataSource {\r\n    this.pagingConf['page'] = page;\r\n    super.setPage(page, doEmit);\r\n    return this;\r\n  }\r\n\r\n  getSort(): any {\r\n    return this.sortConf;\r\n  }\r\n\r\n  getFilter(): any {\r\n    return this.filterConf;\r\n  }\r\n\r\n  getPaging(): any {\r\n    return this.pagingConf;\r\n  }\r\n\r\n  protected prepareData(data: Array<any>): Array<any> {\r\n    data = this.filter(data);\r\n    data = this.sort(data);\r\n    this.filteredAndSorted = data.slice(0);\r\n\r\n    return this.paginate(data);\r\n  }\r\n\r\n  protected sort(data: Array<any>): Array<any> {\r\n    if (this.sortConf) {\r\n      this.sortConf.forEach((fieldConf) => {\r\n        data = LocalSorter\r\n          .sort(data, fieldConf['field'], fieldConf['direction'], fieldConf['compare']);\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  // TODO: refactor?\r\n  protected filter(data: Array<any>): Array<any> {\r\n    if (this.filterConf.filters) {\r\n      if (this.filterConf.andOperator) {\r\n        this.filterConf.filters.forEach((fieldConf: any) => {\r\n          if (fieldConf['search'].length > 0) {\r\n            data = LocalFilter\r\n              .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']);\r\n          }\r\n        });\r\n      } else {\r\n        let mergedData: any = [];\r\n        this.filterConf.filters.forEach((fieldConf: any) => {\r\n          if (fieldConf['search'].length > 0) {\r\n            mergedData = mergedData.concat(LocalFilter\r\n              .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']));\r\n          }\r\n        });\r\n        // remove non unique items\r\n        data = mergedData.filter((elem: any, pos: any, arr: any) => {\r\n          return arr.indexOf(elem) === pos;\r\n        });\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  protected paginate(data: Array<any>): Array<any> {\r\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n      data = LocalPager.paginate(data, this.pagingConf['page'], this.pagingConf['perPage']);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n","import { Component, Input, Output, SimpleChange, EventEmitter, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from './lib/grid';\r\nimport { DataSource } from './lib/data-source/data-source';\r\nimport { Row } from './lib/data-set/row';\r\nimport { deepExtend } from './lib/helpers';\r\nimport { LocalDataSource } from './lib/data-source/local/local.data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table',\r\n  styleUrls: ['./ng2-smart-table.component.scss'],\r\n  templateUrl: './ng2-smart-table.component.html',\r\n})\r\nexport class Ng2SmartTableComponent implements OnChanges {\r\n\r\n  @Input() source: any;\r\n  @Input() settings: Object = {};\r\n\r\n  @Output() rowSelect = new EventEmitter<any>();\r\n  @Output() userRowSelect = new EventEmitter<any>();\r\n  @Output() delete = new EventEmitter<any>();\r\n  @Output() edit = new EventEmitter<any>();\r\n  @Output() create = new EventEmitter<any>();\r\n  @Output() custom = new EventEmitter<any>();\r\n  @Output() deleteConfirm = new EventEmitter<any>();\r\n  @Output() editConfirm = new EventEmitter<any>();\r\n  @Output() createConfirm = new EventEmitter<any>();\r\n  @Output() rowHover: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() onSortTable = new EventEmitter<any>();\r\n  \r\n  tableClass: string;\r\n  tableId: string;\r\n  perPageSelect: any;\r\n  isHideHeader: boolean;\r\n  isHideSubHeader: boolean;\r\n  isPagerDisplay: boolean;\r\n  rowClassFunction: Function;\r\n\r\n\r\n  grid: Grid;\r\n  defaultSettings: Object = {\r\n    mode: 'inline', // inline|external|click-to-edit\r\n    selectMode: 'single', // single|multi\r\n    hideHeader: false,\r\n    hideSubHeader: false,\r\n    actions: {\r\n      columnTitle: 'Actions',\r\n      add: true,\r\n      edit: true,\r\n      delete: true,\r\n      custom: [],\r\n      position: 'left', // left|right\r\n    },\r\n    filter: {\r\n      inputClass: '',\r\n    },\r\n    edit: {\r\n      inputClass: '',\r\n      editButtonContent: 'Edit',\r\n      saveButtonContent: 'Update',\r\n      cancelButtonContent: 'Cancel',\r\n      confirmSave: false,\r\n    },\r\n    add: {\r\n      inputClass: '',\r\n      addButtonContent: 'Add New',\r\n      createButtonContent: 'Create',\r\n      cancelButtonContent: 'Cancel',\r\n      confirmCreate: false,\r\n    },\r\n    delete: {\r\n      deleteButtonContent: 'Delete',\r\n      confirmDelete: false,\r\n    },\r\n    attr: {\r\n      id: '',\r\n      class: '',\r\n    },\r\n    noDataMessage: 'No data found',\r\n    columns: {},\r\n    pager: {\r\n      display: true,\r\n      perPage: 10,\r\n    },\r\n    rowClassFunction: () => \"\"\r\n  };\r\n\r\n  isAllSelected: boolean = false;\r\n\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    if (this.grid) {\r\n      if (changes['settings']) {\r\n        this.grid.setSettings(this.prepareSettings());\r\n      }\r\n      if (changes['source']) {\r\n        this.source = this.prepareSource();\r\n        this.grid.setSource(this.source);\r\n      }\r\n    } else {\r\n      this.initGrid();\r\n    }\r\n    this.tableId = this.grid.getSetting('attr.id');\r\n    this.tableClass = this.grid.getSetting('attr.class');\r\n    this.isHideHeader = this.grid.getSetting('hideHeader');\r\n    this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\r\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\r\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\r\n    this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\r\n    this.rowClassFunction = this.grid.getSetting('rowClassFunction');\r\n  }\r\n\r\n  editRowSelect(row: Row) {\r\n    if (this.grid.getSetting('selectMode') === 'multi') {\r\n      this.onMultipleSelectRow(row);\r\n    } else {\r\n      this.onSelectRow(row);\r\n    }\r\n  }\r\n\r\n  onUserSelectRow(row: Row) {\r\n    if (this.grid.getSetting('selectMode') !== 'multi') {\r\n      this.grid.selectRow(row);\r\n      this.emitUserSelectRow(row);\r\n      this.emitSelectRow(row);\r\n    }\r\n  }\r\n\r\n  onRowHover(row: Row) {\r\n    this.rowHover.emit(row);\r\n  }\r\n\r\n  multipleSelectRow(row: Row) {\r\n    this.grid.multipleSelectRow(row);\r\n    this.emitUserSelectRow(row);\r\n    this.emitSelectRow(row);\r\n  }\r\n\r\n  onSelectAllRows($event: any) {\r\n    this.isAllSelected = !this.isAllSelected;\r\n    this.grid.selectAllRows(this.isAllSelected);\r\n\r\n    this.emitUserSelectRow(null);\r\n    this.emitSelectRow(null);\r\n  }\r\n\r\n  onSelectRow(row: Row) {\r\n    this.grid.selectRow(row);\r\n    this.emitSelectRow(row);\r\n  }\r\n\r\n  onMultipleSelectRow(row: Row) {\r\n    this.emitSelectRow(row);\r\n  }\r\n\r\n  initGrid() {\r\n    this.source = this.prepareSource();\r\n    this.grid = new Grid(this.source, this.prepareSettings());\r\n    this.grid.onSelectRow().subscribe((row) => this.emitSelectRow(row));\r\n  }\r\n\r\n  prepareSource(): DataSource {\r\n    if (this.source instanceof DataSource) {\r\n      return this.source;\r\n    } else if (this.source instanceof Array) {\r\n      return new LocalDataSource(this.source);\r\n    }\r\n\r\n    return new LocalDataSource();\r\n  }\r\n\r\n  prepareSettings(): Object {\r\n    return deepExtend({}, this.defaultSettings, this.settings);\r\n  }\r\n\r\n  changePage($event: any) {\r\n    this.resetAllSelector();\r\n  }\r\n\r\n  sort($event: any) {\r\n    this.resetAllSelector();\r\n  }\r\n\r\n  filter($event: any) {\r\n    this.resetAllSelector();\r\n  }\r\n\r\n  private resetAllSelector() {\r\n    this.isAllSelected = false;\r\n  }\r\n\r\n  private emitUserSelectRow(row: Row) {\r\n    const selectedRows = this.grid.getSelectedRows();\r\n\r\n    this.userRowSelect.emit({\r\n      data: row ? row.getData() : null,\r\n      isSelected: row ? row.getIsSelected() : null,\r\n      source: this.source,\r\n      selected: selectedRows && selectedRows.length ? selectedRows.map((r: Row) => r.getData()) : [],\r\n    });\r\n  }\r\n\r\n  private emitSelectRow(row: Row) {\r\n    this.rowSelect.emit({\r\n      data: row ? row.getData() : null,\r\n      isSelected: row ? row.getIsSelected() : null,\r\n      source: this.source,\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CellModule } from './components/cell/cell.module';\r\nimport { FilterModule } from './components/filter/filter.module';\r\nimport { PagerModule } from './components/pager/pager.module';\r\nimport { TBodyModule } from './components/tbody/tbody.module';\r\nimport { THeadModule } from './components/thead/thead.module';\r\n\r\nimport { Ng2SmartTableComponent } from './ng2-smart-table.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CellModule,\r\n    FilterModule,\r\n    PagerModule,\r\n    TBodyModule,\r\n    THeadModule,\r\n  ],\r\n  declarations: [\r\n    Ng2SmartTableComponent,\r\n  ],\r\n  exports: [\r\n    Ng2SmartTableComponent,\r\n  ],\r\n})\r\nexport class Ng2SmartTableModule {\r\n}\r\n","export class ServerSourceConf {\r\n\r\n  protected static readonly SORT_FIELD_KEY = '_sort';\r\n  protected static readonly SORT_DIR_KEY = '_order';\r\n  protected static readonly PAGER_PAGE_KEY = '_page';\r\n  protected static readonly PAGER_LIMIT_KEY = '_limit';\r\n  protected static readonly FILTER_FIELD_KEY = '#field#_like';\r\n  protected static readonly TOTAL_KEY = 'x-total-count';\r\n  protected static readonly DATA_KEY = '';\r\n\r\n  endPoint: string;\r\n\r\n  sortFieldKey: string;\r\n  sortDirKey: string;\r\n  pagerPageKey: string;\r\n  pagerLimitKey: string;\r\n  filterFieldKey: string;\r\n  totalKey: string;\r\n  dataKey: string;\r\n\r\n  constructor(\r\n    { endPoint = '', sortFieldKey = '', sortDirKey = '',\r\n      pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = '' } = {}) {\r\n\r\n    this.endPoint = endPoint ? endPoint : '';\r\n\r\n    this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\r\n    this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\r\n    this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\r\n    this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\r\n    this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\r\n    this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\r\n    this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LocalDataSource } from '../local/local.data-source';\r\nimport { ServerSourceConf } from './server-source.conf';\r\nimport { getDeepFromObject } from '../../helpers';\r\n\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport class ServerDataSource extends LocalDataSource {\r\n\r\n  protected conf: ServerSourceConf;\r\n\r\n  protected lastRequestCount: number = 0;\r\n\r\n  constructor(protected http: HttpClient, conf: ServerSourceConf | {} = {}) {\r\n    super();\r\n\r\n    this.conf = new ServerSourceConf(conf);\r\n\r\n    if (!this.conf.endPoint) {\r\n      throw new Error('At least endPoint must be specified as a configuration of the server data source.');\r\n    }\r\n  }\r\n\r\n  count(): number {\r\n    return this.lastRequestCount;\r\n  }\r\n\r\n  getElements(): Promise<any> {\r\n    return this.requestElements()\r\n      .pipe(map(res => {\r\n        this.lastRequestCount = this.extractTotalFromResponse(res);\r\n        this.data = this.extractDataFromResponse(res);\r\n\r\n        return this.data;\r\n      })).toPromise();\r\n  }\r\n\r\n  /**\r\n   * Extracts array of data from server response\r\n   * @param res\r\n   * @returns {any}\r\n   */\r\n  protected extractDataFromResponse(res: any): Array<any> {\r\n    const rawData = res.body;\r\n    const data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\r\n\r\n    if (data instanceof Array) {\r\n      return data;\r\n    }\r\n\r\n    throw new Error(`Data must be an array.\r\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\r\n  }\r\n\r\n  /**\r\n   * Extracts total rows count from the server response\r\n   * Looks for the count in the heders first, then in the response body\r\n   * @param res\r\n   * @returns {any}\r\n   */\r\n  protected extractTotalFromResponse(res: any): number {\r\n    if (res.headers.has(this.conf.totalKey)) {\r\n      return +res.headers.get(this.conf.totalKey);\r\n    } else {\r\n      const rawData = res.body;\r\n      return getDeepFromObject(rawData, this.conf.totalKey, 0);\r\n    }\r\n  }\r\n\r\n  protected requestElements(): Observable<any> {\r\n    let httpParams = this.createRequesParams();\r\n    return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\r\n  }\r\n\r\n  protected createRequesParams(): HttpParams {\r\n    let httpParams = new HttpParams();\r\n\r\n    httpParams = this.addSortRequestParams(httpParams);\r\n    httpParams = this.addFilterRequestParams(httpParams);\r\n    return this.addPagerRequestParams(httpParams);\r\n  }\r\n\r\n  protected addSortRequestParams(httpParams: HttpParams): HttpParams {\r\n    if (this.sortConf) {\r\n      this.sortConf.forEach((fieldConf) => {\r\n        httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\r\n        httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\r\n      });\r\n    }\r\n\r\n    return httpParams;\r\n  }\r\n\r\n  protected addFilterRequestParams(httpParams: HttpParams): HttpParams {\r\n\r\n    if (this.filterConf.filters) {\r\n      this.filterConf.filters.forEach((fieldConf: any) => {\r\n        if (fieldConf['search']) {\r\n          httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\r\n        }\r\n      });\r\n    }\r\n\r\n    return httpParams;\r\n  }\r\n\r\n  protected addPagerRequestParams(httpParams: HttpParams): HttpParams {\r\n\r\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n      httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf['page']);\r\n      httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\r\n    }\r\n\r\n    return httpParams;\r\n  }\r\n}\r\n"]}